{"version":3,"sources":["components/Header.js","components/ContactDetail.js","components/SearchItem.js","components/Search.js","components/SideBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","Header","classes","Toolbar","Typography","variant","className","card","maxWidth","paddintTop","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","cardContent","textAlign","padding","addressAlign","paddingLeft","paddingRight","companyPadding","fontSize","fontWeight","contactDivInline","display","ContactDetail","item","selectedContact","React","useState","expanded","setExpanded","Card","CardHeader","Avatar","aria-label","name","charAt","action","IconButton","CardMedia","image","CardContent","phone","email","website","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","address","suite","street","city","zipcode","company","bs","catchPhrase","root","width","palette","background","paper","listItemStyle","paddingBottom","SearchItem","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","icon","color","search","position","borderRadius","shape","fade","common","white","marginRight","spacing","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","searchDivInline","inputRoot","inputInput","Search","searchData","onSuggestionClick","query","setQuery","suggestions","setSuggestions","InputBase","placeholder","input","onChange","e","value","target","results","filter","x","toLowerCase","includes","inputProps","length","map","s","index","key","contact","console","log","drawer","size","flexShrink","DrawerContent","suggestion","Sidebar","Drawer","searchDiv","contactDiv","content","appBar","zIndex","App","contactData","setContactData","setContact","useEffect","fetch","then","response","json","jsonOutput","catch","error","AppBar","SideBar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09931cff.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Toolbar, Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  }));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return(\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                Contacts\r\n                </Typography>\r\n            </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { red } from '@material-ui/core/colors';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    paddintTop: '80px',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    textAlign: 'left',\r\n    padding: '0px',\r\n  },\r\n  addressAlign: {\r\n      paddingLeft: '50px',\r\n      paddingRight: '10px'\r\n  },\r\n  companyPadding: {\r\n      paddingTop: '20px',\r\n      paddingLeft: '50px',\r\n      paddingRight: '10px'\r\n  },\r\n  title: {\r\n    fontSize: '0.975rem',\r\n    fontWeight: '600' \r\n  },\r\n  contactDivInline: {\r\n    textAlign: 'center',\r\n   display: 'inline-block',\r\n   paddingTop: '80px',\r\n},\r\n\r\n}));\r\n\r\nexport default function ContactDetail(item) {\r\n    var selectedContact = item.item;\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n      <div className = {classes.contactDivInline}>\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"contact\" className={classes.avatar}>\r\n            {selectedContact.name.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={selectedContact.name} className={classes.title}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"public/contact.jpg\"\r\n        title=\"contact\"\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n      <IconButton aria-label=\"Phone\">\r\n          <PhoneIcon />\r\n        </IconButton>\r\n        {selectedContact.phone}\r\n      </CardContent>\r\n      <CardContent className={classes.cardContent}>\r\n      <IconButton aria-label=\"Email\">\r\n          <EmailIcon />\r\n        </IconButton>\r\n        {selectedContact.email}\r\n      </CardContent>\r\n      <CardContent className={classes.cardContent}>\r\n      <IconButton aria-label=\"Website\">\r\n      <LanguageIcon/>\r\n      </IconButton>\r\n        {selectedContact.website}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent className={classes.cardContent}>\r\n        <div>\r\n        <IconButton aria-label=\"Address\">\r\n          <LocationCityIcon/>\r\n          </IconButton>\r\n          {selectedContact.address.suite + \", \" + selectedContact.address.street + \", \"}</div>\r\n          <div className={classes.addressAlign}>{selectedContact.address.city + \", \" + selectedContact.address.zipcode}</div>\r\n          \r\n        </CardContent>\r\n        <div className={classes.companyPadding}></div>\r\n        <CardContent className={classes.cardContent}>\r\n        <div>\r\n        <IconButton aria-label=\"Company\">\r\n          <BusinessIcon/>\r\n          </IconButton>\r\n          {selectedContact.company.name }</div>\r\n          <div className={classes.addressAlign}>{selectedContact.company.bs} </div>\r\n          <div className={classes.companyPadding}>{selectedContact.company.catchPhrase}</div>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      \r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n      },\r\n      listItemStyle: {\r\n        paddingBottom: '0px',\r\n        paddingTop: '0px',\r\n      }\r\n  }));\r\n\r\nconst SearchItem = (item) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <List className={classes.root}>\r\n      <ListItem className={classes.listItemStyle}>\r\n        <ListItemAvatar>\r\n        <Avatar aria-label=\"contact\" className={classes.avatar}>\r\n            {item.item.name.charAt(0)}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={item.item.name} secondary={item.item.phone} />\r\n      </ListItem>\r\n    </List>\r\n    );\r\n};\r\n\r\nexport default SearchItem;","import React, { useState } from 'react';\r\nimport { InputBase, makeStyles } from '@material-ui/core';\r\nimport {fade} from '@material-ui/core/styles';\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\nimport SearchItem from './SearchItem';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        color: '#fff'\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n         marginRight: theme.spacing(2),\r\n         marginLeft: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(0),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        position: 'absolute',\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      searchDivInline: {\r\n           textAlign: 'left',\r\n          display: 'inline-block',\r\n          paddingTop: '80px',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: 210,\r\n        },\r\n      },\r\n}));\r\n\r\nconst Search = ({searchData,onSuggestionClick}) => {\r\n    const classes = useStyles();\r\n    const [query, setQuery] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    //Cascade the suggestion click to the parent.\r\n    const handleSuggestionClick = contact => e => {\r\n        console.log(\"Suggestion clicked in Search.js\",contact);\r\n        setSuggestions(null);\r\n        setQuery('');\r\n        onSuggestionClick(contact);\r\n      };\r\n    \r\n      // Refine suggestions based on the search query.\r\n    const handleQueryChange = e => {\r\n        let value = e.target.value;\r\n        setQuery(value);\r\n    \r\n        if (!value) {\r\n          setSuggestions(null);\r\n          return;\r\n        }\r\n    \r\n        // Search the name, email and phone number.\r\n        const results = searchData\r\n          ? searchData\r\n              .filter(x => \r\n                x.name.toLowerCase().includes(value.toLowerCase())\r\n                ||\r\n                x.email.toLowerCase().includes(value.toLowerCase())\r\n                ||\r\n                x.phone.includes(value)\r\n                )\r\n          : null;\r\n    \r\n        setSuggestions(results);\r\n      };\r\n\r\n    return (\r\n        <div className={classes.searchDivInline}>\r\n            <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search name, email or phone)...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              onChange={handleQueryChange}\r\n              value={query}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n\r\n            {suggestions && suggestions.length > 0 && (\r\n            <div>\r\n            {suggestions.map((s, index) => (\r\n                <div key={index} onClick={handleSuggestionClick(s)}>\r\n                <SearchItem item={s}/>    \r\n                </div>\r\n            ))}\r\n            </div>\r\n            )}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Search from './Search';\r\nimport drawer from '@material-ui/core/Drawer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: drawer.size,\r\n        flexShrink: 0\r\n      }\r\n    },\r\n    drawer: {\r\n      width: drawer.size\r\n    }\r\n  }));\r\n\r\n  // Content inside the side bar.\r\n  const DrawerContent = ({ searchData, onSuggestionClick }) => {\r\n\r\n    // Invoke the parent contact selection.\r\n    const handleSuggestionClick = suggestion => {\r\n        console.log(\"Suggestion clicked in DrawerContent\",suggestion);\r\n        onSuggestionClick(suggestion);\r\n      };\r\n\r\n    return(\r\n        <div>\r\n        <Search searchData={searchData} onSuggestionClick = {handleSuggestionClick}/>\r\n        </div>\r\n    );\r\n     };\r\n\r\n\r\nconst Sidebar = ({ searchData, onSuggestionClick }) => {\r\n    const classes = useStyles();\r\n\r\n    const handleSuggestionClick = suggestion => {\r\n        console.log(\"Suggestion clicked in SideBar.js\",suggestion);\r\n        onSuggestionClick(suggestion);\r\n      };\r\n\r\n    return (\r\n      <nav className={classes.root}>\r\n          <Drawer classes={{ paper: classes.drawer }} variant=\"permanent\">\r\n            <DrawerContent \r\n              searchData={searchData} \r\n              onSuggestionClick={handleSuggestionClick}\r\n            />\r\n          </Drawer>\r\n      </nav>\r\n    );\r\n  };\r\n  \r\n  export default Sidebar;","import React, {useEffect,useState} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport ContactDetail from './components/ContactDetail';\nimport SideBar from './components/SideBar';\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n      color: '#fff'\n    },\n    searchDiv: {\n      textAlign: 'left',\n      width: '400px',\n  },\n  contactDiv: {\n    textAlign: 'center',\n    paddingTop: '20px',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  }));\n\nfunction App() {\n\n  const [contactData, setContactData] = useState();\n  const [contact, setContact] = useState();\n  const classes = useStyles();\n  \n  useEffect(()=>{\n    // Fetch the users contact data from the below API.\n        fetch('https://jsonplaceholder.typicode.com/users/')\n        .then(response => response.json())\n        .then(jsonOutput => {\n          setContactData(jsonOutput);\n        })\n        .catch((error)=> {console.log(\"Error invoking api. \"+error)})\n\n        setContact(null);\n  },[])\n\n  // Set the selected contact to display the contact detail.\n  const handleSuggestionClick = suggestion => {\n    console.log(\"Suggestion clicked in App.js\",suggestion);\n    setContact(suggestion);\n  };\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"fixed\" className={classes.appBar}>\n      <Header/>\n      </AppBar>  \n      <SideBar searchData={contactData} onSuggestionClick = {handleSuggestionClick} />\n      <main className={classes.content}>\n      {contact && (\n        <ContactDetail \n          item={contact} \n        />\n      )}  \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}